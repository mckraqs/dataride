# Sample AWS network setup
#
# Creates a structure that consists of:
# - AWS VPC
#    - CIDR block: 10.192.0.0/16
# - AWS subnets (2 public, 2 private, all within above CIDR block)
# - AWS Internet Gateway
# - AWS NAT Gateways (1 for each private subnet)
# - 3 AWS Route Tables (1 public and 2 private)
# - AWS Security Group with rules:
#   - egress self-referencing rule for TCP protocol (0 for both ingress and egress)
#   - ingress rule for HTTPS protocol (443 for both ingress and egress)

providers:
  - aws:
      region: eu-central-1
envs:
  prod:
resources:
  - aws_vpc:
      _module: network
      resource_name: main_vpc
      vpc_cidr: "10.192.0.0/16"

  # AWS Subnets (2 public, 2 private)
  - aws_subnet:
      _module: network
      resource_name: public_subnet_1
      vpc_id: _aws_vpc.main_vpc.id
      availability_zone: eu-central-1a
      subnet_cidr_block:
        is_variable: true
        name: public_subnet_1_cidr
        type: string
      map_public_ip_on_launch: true
  - aws_subnet:
      _module: network
      resource_name: public_subnet_2
      vpc_id: _aws_vpc.main_vpc.id
      availability_zone: eu-central-1b
      subnet_cidr_block:
        is_variable: true
        name: public_subnet_2_cidr
        type: string
      map_public_ip_on_launch: true
  - aws_subnet:
      _module: network
      resource_name: private_subnet_1
      vpc_id: _aws_vpc.main_vpc.id
      availability_zone: eu-central-1a
      subnet_cidr_block:
        is_variable: true
        name: private_subnet_1_cidr
        type: string
      map_public_ip_on_launch: false
  - aws_subnet:
      _module: network
      resource_name: private_subnet_2
      vpc_id: _aws_vpc.main_vpc.id
      availability_zone: eu-central-1b
      subnet_cidr_block:
        is_variable: true
        name: private_subnet_2_cidr
        type: string
      map_public_ip_on_launch: false

  # Internet & NAT Gateways, EIPs for Internet access
  - aws_internet_gateway:
      _module: network
      resource_name: igw
      vpc_id: _aws_vpc.main_vpc.id
  - aws_eip:
      _module: network
      resource_name: elastic_ip_1
  - aws_eip:
      _module: network
      resource_name: elastic_ip_2
  - aws_nat_gateway:
      _module: network
      resource_name: nat_1
      allocation_id: _aws_eip.elastic_ip_1.id
      subnet_id: _aws_subnet.public_subnet_1.id
  - aws_nat_gateway:
      _module: network
      resource_name: nat_2
      allocation_id: _aws_eip.elastic_ip_2.id
      subnet_id: _aws_subnet.public_subnet_2.id

  # Route tables & route tables associations
  - aws_route_table:
      _module: network
      resource_name: rt_public
      vpc_id: _aws_vpc.main_vpc_id
      basic_route_cidr_block: 0.0.0.0/0
      gateway_id: _aws_internet_gateway.igw.id
  - aws_route_table:
      _module: network
      resource_name: rt_private_1
      vpc_id: _aws_vpc.main_vpc_id
      basic_route_cidr_block: 0.0.0.0/0
      gateway_id: _aws_nat_gateway.nat_1.id
  - aws_route_table:
      _module: network
      resource_name: rt_private_2
      vpc_id: _aws_vpc.main_vpc_id
      basic_route_cidr_block: 0.0.0.0/0
      gateway_id: _aws_nat_gateway.nat_2.id
  - aws_route_table_association:
      _module: network
      route_table_id: _aws_route_table.rt_public.id
      subnet_id: _aws_subnet.public_subnet_1.id
  - aws_route_table_association:
      _module: network
      route_table_id: _aws_route_table.rt_public.id
      subnet_id: _aws_subnet.public_subnet_2.id
  - aws_route_table_association:
      _module: network
      route_table_id: _aws_route_table.rt_private_1.id
      subnet_id: _aws_subnet.private_subnet_1.id
  - aws_route_table_association:
      _module: network
      route_table_id: _aws_route_table.rt_private_2.id
      subnet_id: _aws_subnet.private_subnet_2.id

  # Security group & SG rules
  - aws_security_group:
      _module: network
      resource_name: main_sg
      vpc_id: _aws_vpc.main_vpc.id
  - aws_security_group_rule:
      _module: network
      security_group_id: _aws_security_group.main_sg.id
      type: egress
      from_port: 0
      to_port: 0
      protocol: tcp
      is_self_ref: true
  - aws_security_group_rule:
      _module: network
      security_group_id: _aws_security_group.main_sg.id
      type: ingress
      from_port: 443
      to_port: 443
      protocol: tcp